// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.14.0
// source: fenixClientTestDataSyncServerGrpcApi.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Used to have client and server in sync with using the same proto file version
// Minor changes is backwards compatible with previous version
// Major changes changes needs to be the same for server and client
type CurrentTestDataProtoFileVersionEnum int32

const (
	CurrentTestDataProtoFileVersionEnum_VERSION_1_0 CurrentTestDataProtoFileVersionEnum = 0 // Current version
)

// Enum value maps for CurrentTestDataProtoFileVersionEnum.
var (
	CurrentTestDataProtoFileVersionEnum_name = map[int32]string{
		0: "VERSION_1_0",
	}
	CurrentTestDataProtoFileVersionEnum_value = map[string]int32{
		"VERSION_1_0": 0,
	}
)

func (x CurrentTestDataProtoFileVersionEnum) Enum() *CurrentTestDataProtoFileVersionEnum {
	p := new(CurrentTestDataProtoFileVersionEnum)
	*p = x
	return p
}

func (x CurrentTestDataProtoFileVersionEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CurrentTestDataProtoFileVersionEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_fenixClientTestDataSyncServerGrpcApi_proto_enumTypes[0].Descriptor()
}

func (CurrentTestDataProtoFileVersionEnum) Type() protoreflect.EnumType {
	return &file_fenixClientTestDataSyncServerGrpcApi_proto_enumTypes[0]
}

func (x CurrentTestDataProtoFileVersionEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CurrentTestDataProtoFileVersionEnum.Descriptor instead.
func (CurrentTestDataProtoFileVersionEnum) EnumDescriptor() ([]byte, []int) {
	return file_fenixClientTestDataSyncServerGrpcApi_proto_rawDescGZIP(), []int{0}
}

// Parameter used for Empty inputs
type EmptyParameter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EmptyParameter) Reset() {
	*x = EmptyParameter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fenixClientTestDataSyncServerGrpcApi_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmptyParameter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyParameter) ProtoMessage() {}

func (x *EmptyParameter) ProtoReflect() protoreflect.Message {
	mi := &file_fenixClientTestDataSyncServerGrpcApi_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyParameter.ProtoReflect.Descriptor instead.
func (*EmptyParameter) Descriptor() ([]byte, []int) {
	return file_fenixClientTestDataSyncServerGrpcApi_proto_rawDescGZIP(), []int{0}
}

// Ack/Nack- Response message with comment
type AckNackResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Acknack  bool   `protobuf:"varint,1,opt,name=acknack,proto3" json:"acknack,omitempty"`  // True=Ack, False=Nack
	Comments string `protobuf:"bytes,2,opt,name=comments,proto3" json:"comments,omitempty"` //Comments if needed
}

func (x *AckNackResponse) Reset() {
	*x = AckNackResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fenixClientTestDataSyncServerGrpcApi_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AckNackResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AckNackResponse) ProtoMessage() {}

func (x *AckNackResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fenixClientTestDataSyncServerGrpcApi_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AckNackResponse.ProtoReflect.Descriptor instead.
func (*AckNackResponse) Descriptor() ([]byte, []int) {
	return file_fenixClientTestDataSyncServerGrpcApi_proto_rawDescGZIP(), []int{1}
}

func (x *AckNackResponse) GetAcknack() bool {
	if x != nil {
		return x.Acknack
	}
	return false
}

func (x *AckNackResponse) GetComments() string {
	if x != nil {
		return x.Comments
	}
	return ""
}

var File_fenixClientTestDataSyncServerGrpcApi_proto protoreflect.FileDescriptor

var file_fenixClientTestDataSyncServerGrpcApi_proto_rawDesc = []byte{
	0x0a, 0x2a, 0x66, 0x65, 0x6e, 0x69, 0x78, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x73,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x47,
	0x72, 0x70, 0x63, 0x41, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x24, 0x66, 0x65,
	0x6e, 0x69, 0x78, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x41,
	0x70, 0x69, 0x22, 0x10, 0x0a, 0x0e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x22, 0x47, 0x0a, 0x0f, 0x41, 0x63, 0x6b, 0x4e, 0x61, 0x63, 0x6b, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x6b, 0x6e, 0x61,
	0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x61, 0x63, 0x6b, 0x6e, 0x61, 0x63,
	0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2a, 0x36, 0x0a,
	0x23, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x46, 0x69, 0x6c, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x45, 0x6e, 0x75, 0x6d, 0x12, 0x0f, 0x0a, 0x0b, 0x56, 0x45, 0x52, 0x53, 0x49, 0x4f, 0x4e, 0x5f,
	0x31, 0x5f, 0x30, 0x10, 0x00, 0x32, 0xb6, 0x06, 0x0a, 0x1f, 0x46, 0x65, 0x6e, 0x69, 0x78, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x47, 0x72, 0x70,
	0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x7c, 0x0a, 0x0b, 0x41, 0x72, 0x65,
	0x59, 0x6f, 0x75, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x12, 0x34, 0x2e, 0x66, 0x65, 0x6e, 0x69, 0x78,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x79,
	0x6e, 0x63, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x41, 0x70, 0x69, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x1a, 0x35,
	0x2e, 0x66, 0x65, 0x6e, 0x69, 0x78, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x73, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x47, 0x72,
	0x70, 0x63, 0x41, 0x70, 0x69, 0x2e, 0x41, 0x63, 0x6b, 0x4e, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x87, 0x01, 0x0a, 0x16, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x54, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x12, 0x34, 0x2e, 0x66, 0x65, 0x6e, 0x69, 0x78, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x54, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x41, 0x70, 0x69, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x1a, 0x35, 0x2e, 0x66, 0x65, 0x6e, 0x69, 0x78,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x79,
	0x6e, 0x63, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x41, 0x70, 0x69, 0x2e,
	0x41, 0x63, 0x6b, 0x4e, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x7f, 0x0a, 0x0e, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x72, 0x6b, 0x6c, 0x65, 0x48,
	0x61, 0x73, 0x68, 0x12, 0x34, 0x2e, 0x66, 0x65, 0x6e, 0x69, 0x78, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x54, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x41, 0x70, 0x69, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x1a, 0x35, 0x2e, 0x66, 0x65, 0x6e, 0x69,
	0x78, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53,
	0x79, 0x6e, 0x63, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x41, 0x70, 0x69,
	0x2e, 0x41, 0x63, 0x6b, 0x4e, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x7f, 0x0a, 0x0e, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x72, 0x6b, 0x6c, 0x65,
	0x54, 0x72, 0x65, 0x65, 0x12, 0x34, 0x2e, 0x66, 0x65, 0x6e, 0x69, 0x78, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x54, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x41, 0x70, 0x69, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x1a, 0x35, 0x2e, 0x66, 0x65, 0x6e,
	0x69, 0x78, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x53, 0x79, 0x6e, 0x63, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x41, 0x70,
	0x69, 0x2e, 0x41, 0x63, 0x6b, 0x4e, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x84, 0x01, 0x0a, 0x13, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x65, 0x73, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x34, 0x2e, 0x66, 0x65,
	0x6e, 0x69, 0x78, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x41,
	0x70, 0x69, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x1a, 0x35, 0x2e, 0x66, 0x65, 0x6e, 0x69, 0x78, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54,
	0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x47, 0x72, 0x70, 0x63, 0x41, 0x70, 0x69, 0x2e, 0x41, 0x63, 0x6b, 0x4e, 0x61, 0x63, 0x6b,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x81, 0x01, 0x0a, 0x10, 0x53,
	0x65, 0x6e, 0x64, 0x54, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x6f, 0x77, 0x73, 0x12,
	0x34, 0x2e, 0x66, 0x65, 0x6e, 0x69, 0x78, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x73,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x47,
	0x72, 0x70, 0x63, 0x41, 0x70, 0x69, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x65, 0x74, 0x65, 0x72, 0x1a, 0x35, 0x2e, 0x66, 0x65, 0x6e, 0x69, 0x78, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x54, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x79, 0x6e, 0x63, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x41, 0x70, 0x69, 0x2e, 0x41, 0x63, 0x6b,
	0x4e, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x09,
	0x5a, 0x07, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_fenixClientTestDataSyncServerGrpcApi_proto_rawDescOnce sync.Once
	file_fenixClientTestDataSyncServerGrpcApi_proto_rawDescData = file_fenixClientTestDataSyncServerGrpcApi_proto_rawDesc
)

func file_fenixClientTestDataSyncServerGrpcApi_proto_rawDescGZIP() []byte {
	file_fenixClientTestDataSyncServerGrpcApi_proto_rawDescOnce.Do(func() {
		file_fenixClientTestDataSyncServerGrpcApi_proto_rawDescData = protoimpl.X.CompressGZIP(file_fenixClientTestDataSyncServerGrpcApi_proto_rawDescData)
	})
	return file_fenixClientTestDataSyncServerGrpcApi_proto_rawDescData
}

var file_fenixClientTestDataSyncServerGrpcApi_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_fenixClientTestDataSyncServerGrpcApi_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_fenixClientTestDataSyncServerGrpcApi_proto_goTypes = []interface{}{
	(CurrentTestDataProtoFileVersionEnum)(0), // 0: fenixClientTestDataSyncServerGrpcApi.CurrentTestDataProtoFileVersionEnum
	(*EmptyParameter)(nil),                   // 1: fenixClientTestDataSyncServerGrpcApi.EmptyParameter
	(*AckNackResponse)(nil),                  // 2: fenixClientTestDataSyncServerGrpcApi.AckNackResponse
}
var file_fenixClientTestDataSyncServerGrpcApi_proto_depIdxs = []int32{
	1, // 0: fenixClientTestDataSyncServerGrpcApi.FenixClientTestDataGrpcServices.AreYouAlive:input_type -> fenixClientTestDataSyncServerGrpcApi.EmptyParameter
	1, // 1: fenixClientTestDataSyncServerGrpcApi.FenixClientTestDataGrpcServices.RegisterTestDataClient:input_type -> fenixClientTestDataSyncServerGrpcApi.EmptyParameter
	1, // 2: fenixClientTestDataSyncServerGrpcApi.FenixClientTestDataGrpcServices.SendMerkleHash:input_type -> fenixClientTestDataSyncServerGrpcApi.EmptyParameter
	1, // 3: fenixClientTestDataSyncServerGrpcApi.FenixClientTestDataGrpcServices.SendMerkleTree:input_type -> fenixClientTestDataSyncServerGrpcApi.EmptyParameter
	1, // 4: fenixClientTestDataSyncServerGrpcApi.FenixClientTestDataGrpcServices.SendTestDataHeaders:input_type -> fenixClientTestDataSyncServerGrpcApi.EmptyParameter
	1, // 5: fenixClientTestDataSyncServerGrpcApi.FenixClientTestDataGrpcServices.SendTestDataRows:input_type -> fenixClientTestDataSyncServerGrpcApi.EmptyParameter
	2, // 6: fenixClientTestDataSyncServerGrpcApi.FenixClientTestDataGrpcServices.AreYouAlive:output_type -> fenixClientTestDataSyncServerGrpcApi.AckNackResponse
	2, // 7: fenixClientTestDataSyncServerGrpcApi.FenixClientTestDataGrpcServices.RegisterTestDataClient:output_type -> fenixClientTestDataSyncServerGrpcApi.AckNackResponse
	2, // 8: fenixClientTestDataSyncServerGrpcApi.FenixClientTestDataGrpcServices.SendMerkleHash:output_type -> fenixClientTestDataSyncServerGrpcApi.AckNackResponse
	2, // 9: fenixClientTestDataSyncServerGrpcApi.FenixClientTestDataGrpcServices.SendMerkleTree:output_type -> fenixClientTestDataSyncServerGrpcApi.AckNackResponse
	2, // 10: fenixClientTestDataSyncServerGrpcApi.FenixClientTestDataGrpcServices.SendTestDataHeaders:output_type -> fenixClientTestDataSyncServerGrpcApi.AckNackResponse
	2, // 11: fenixClientTestDataSyncServerGrpcApi.FenixClientTestDataGrpcServices.SendTestDataRows:output_type -> fenixClientTestDataSyncServerGrpcApi.AckNackResponse
	6, // [6:12] is the sub-list for method output_type
	0, // [0:6] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_fenixClientTestDataSyncServerGrpcApi_proto_init() }
func file_fenixClientTestDataSyncServerGrpcApi_proto_init() {
	if File_fenixClientTestDataSyncServerGrpcApi_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_fenixClientTestDataSyncServerGrpcApi_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmptyParameter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fenixClientTestDataSyncServerGrpcApi_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AckNackResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_fenixClientTestDataSyncServerGrpcApi_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_fenixClientTestDataSyncServerGrpcApi_proto_goTypes,
		DependencyIndexes: file_fenixClientTestDataSyncServerGrpcApi_proto_depIdxs,
		EnumInfos:         file_fenixClientTestDataSyncServerGrpcApi_proto_enumTypes,
		MessageInfos:      file_fenixClientTestDataSyncServerGrpcApi_proto_msgTypes,
	}.Build()
	File_fenixClientTestDataSyncServerGrpcApi_proto = out.File
	file_fenixClientTestDataSyncServerGrpcApi_proto_rawDesc = nil
	file_fenixClientTestDataSyncServerGrpcApi_proto_goTypes = nil
	file_fenixClientTestDataSyncServerGrpcApi_proto_depIdxs = nil
}
